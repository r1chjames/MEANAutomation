!function(window,document){function uuid(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(c){var r=16*Math.random()|0,v="x"==c?r:3&r|8;return v.toString(16)})}function LogglyTracker(){this.key=!1}function setKey(tracker,key){tracker.key=key,tracker.setSession(),setInputUrl(tracker)}function setInputUrl(tracker){tracker.inputUrl=LOGGLY_INPUT_PREFIX+(tracker.logglyCollectorDomain||LOGGLY_COLLECTOR_DOMAIN)+"/inputs/"+tracker.key+LOGGLY_INPUT_SUFFIX}var LOGGLY_INPUT_PREFIX="http"+("https:"===document.location.protocol?"s":"")+"://",LOGGLY_COLLECTOR_DOMAIN="logs-01.loggly.com",LOGGLY_INPUT_SUFFIX=".gif?",LOGGLY_SESSION_KEY="logglytrackingsession",LOGGLY_SESSION_KEY_LENGTH=LOGGLY_SESSION_KEY.length+1;LogglyTracker.prototype={setSession:function(session_id){session_id?(this.session_id=session_id,this.setCookie(this.session_id)):this.session_id||(this.session_id=this.readCookie(),this.session_id||(this.session_id=uuid(),this.setCookie(this.session_id)))},push:function(data){var type=typeof data;if(data&&("object"===type||"string"===type)){var self=this;setTimeout(function(){if("string"===type)data={text:data};else{if(data.logglyCollectorDomain)return void(self.logglyCollectorDomain=data.logglyCollectorDomain);if(data.logglyKey)return void setKey(self,data.logglyKey);if(data.session_id)return void self.setSession(data.session_id)}self.key&&self.track(data)},0)}},track:function(data){data.sessionId=this.session_id;try{var im=new Image,q="PLAINTEXT="+encodeURIComponent(JSON.stringify(data));im.src=this.inputUrl+q}catch(ex){window&&window.console&&"function"==typeof window.console.log&&(console.log("Failed to log to loggly because of this exception:\n"+ex),console.log("Failed log data:",data))}},readCookie:function(){var cookie=document.cookie,i=cookie.indexOf(LOGGLY_SESSION_KEY);if(0>i)return!1;var end=cookie.indexOf(";",i+1);return end=0>end?cookie.length:end,cookie.slice(i+LOGGLY_SESSION_KEY_LENGTH,end)},setCookie:function(value){document.cookie=LOGGLY_SESSION_KEY+"="+value}};var existing=window._LTracker,tracker=new LogglyTracker;if(existing&&existing.length){var i=0,eLength=existing.length;for(i=0;eLength>i;i++)tracker.push(existing[i])}window._LTracker=tracker,window.LogglyTracker=LogglyTracker}(window,document),angular.module("loggly",[]).service("loggly",[function(){var logger=new LogglyTracker;this.setApiKey=function(logglyApiKey){logger&&(logger=new LogglyTracker),logger.push({logglyKey:logglyApiKey})},this.log=function(strOrObj){logger.push(strOrObj)},this.info=function(strOrObj){logger.push({logLevel:"info",data:strOrObj})},this.debug=function(strOrObj){logger.push({logLevel:"debug",data:strOrObj})},this.error=function(strOrObj){logger.push({logLevel:"error",data:strOrObj})}}]);